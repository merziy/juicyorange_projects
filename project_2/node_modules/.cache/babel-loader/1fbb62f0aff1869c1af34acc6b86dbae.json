{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nvar _watch;\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Tagged input form control\n// Based loosely on https://adamwathan.me/renderless-components-in-vuejs/\nimport { Vue } from '../../vue';\nimport { NAME_FORM_TAGS } from '../../constants/components';\nimport { EVENT_NAME_BLUR, EVENT_NAME_FOCUS, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_TAG_STATE, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_BACKSPACE, CODE_DELETE, CODE_ENTER } from '../../constants/key-codes';\nimport { PROP_TYPE_ARRAY, PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER, PROP_TYPE_OBJECT, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACES } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_ADD_BUTTON_TEXT } from '../../constants/slots';\nimport { arrayIncludes, concat } from '../../utils/array';\nimport { cssEscape } from '../../utils/css-escape';\nimport { attemptBlur, attemptFocus, closest, matches, requestAF, select } from '../../utils/dom';\nimport { eventOn, eventOff, stopEvent } from '../../utils/events';\nimport { identity } from '../../utils/identity';\nimport { isEvent, isNumber, isString } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { makeModelMixin } from '../../utils/model';\nimport { omit, pick, sortKeys } from '../../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable } from '../../utils/props';\nimport { escapeRegExp, toString, trim, trimLeft } from '../../utils/string';\nimport { formControlMixin, props as formControlProps } from '../../mixins/form-control';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenersMixin } from '../../mixins/listeners';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormText } from '../form/form-text';\nimport { BFormTag } from './form-tag'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('value', {\n    type: PROP_TYPE_ARRAY,\n    defaultValue: []\n  }),\n  modelMixin = _makeModelMixin.mixin,\n  modelProps = _makeModelMixin.props,\n  MODEL_PROP_NAME = _makeModelMixin.prop,\n  MODEL_EVENT_NAME = _makeModelMixin.event; // Supported input types (for built in input)\n\nvar TYPES = ['text', 'email', 'tel', 'url', 'number']; // Default ignore input focus selector\n\nvar DEFAULT_INPUT_FOCUS_SELECTOR = ['.b-form-tag', 'button', 'input', 'select'].join(' '); // --- Helper methods ---\n// Escape special chars in string and replace\n// contiguous spaces with a whitespace match\n\nvar escapeRegExpChars = function escapeRegExpChars(str) {\n  return escapeRegExp(str).replace(RX_SPACES, '\\\\s');\n}; // Remove leading/trailing spaces from array of tags and remove duplicates\n\nvar cleanTags = function cleanTags(tags) {\n  return concat(tags).map(function (tag) {\n    return trim(toString(tag));\n  }).filter(function (tag, index, arr) {\n    return tag.length > 0 && arr.indexOf(tag) === index;\n  });\n}; // Processes an input/change event, normalizing string or event argument\n\nvar processEventValue = function processEventValue(event) {\n  return isString(event) ? event : isEvent(event) ? event.target.value || '' : '';\n}; // Returns a fresh empty `tagsState` object\n\nvar cleanTagsState = function cleanTagsState() {\n  return {\n    all: [],\n    valid: [],\n    invalid: [],\n    duplicate: []\n  };\n}; // --- Props ---\n\nvar props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), formControlProps), formSizeProps), formStateProps), {}, {\n  addButtonText: makeProp(PROP_TYPE_STRING, 'Add'),\n  addButtonVariant: makeProp(PROP_TYPE_STRING, 'outline-secondary'),\n  // Enable change event triggering tag addition\n  // Handy if using <select> as the input\n  addOnChange: makeProp(PROP_TYPE_BOOLEAN, false),\n  duplicateTagText: makeProp(PROP_TYPE_STRING, 'Duplicate tag(s)'),\n  feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n  // Disable the input focus behavior when clicking\n  // on element matching the selector (or selectors)\n  ignoreInputFocusSelector: makeProp(PROP_TYPE_ARRAY_STRING, DEFAULT_INPUT_FOCUS_SELECTOR),\n  // Additional attributes to add to the input element\n  inputAttrs: makeProp(PROP_TYPE_OBJECT, {}),\n  inputClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  inputId: makeProp(PROP_TYPE_STRING),\n  inputType: makeProp(PROP_TYPE_STRING, 'text', function (value) {\n    return arrayIncludes(TYPES, value);\n  }),\n  invalidTagText: makeProp(PROP_TYPE_STRING, 'Invalid tag(s)'),\n  limit: makeProp(PROP_TYPE_NUMBER),\n  limitTagsText: makeProp(PROP_TYPE_STRING, 'Tag limit reached'),\n  // Disable ENTER key from triggering tag addition\n  noAddOnEnter: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Disable the focus ring on the root element\n  noOuterFocus: makeProp(PROP_TYPE_BOOLEAN, false),\n  noTagRemove: makeProp(PROP_TYPE_BOOLEAN, false),\n  placeholder: makeProp(PROP_TYPE_STRING, 'Add tag...'),\n  // Enable deleting last tag in list when CODE_BACKSPACE is\n  // pressed and input is empty\n  removeOnDelete: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Character (or characters) that trigger adding tags\n  separator: makeProp(PROP_TYPE_ARRAY_STRING),\n  tagClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tagPills: makeProp(PROP_TYPE_BOOLEAN, false),\n  tagRemoveLabel: makeProp(PROP_TYPE_STRING, 'Remove tag'),\n  tagRemovedLabel: makeProp(PROP_TYPE_STRING, 'Tag removed'),\n  tagValidator: makeProp(PROP_TYPE_FUNCTION),\n  tagVariant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_FORM_TAGS); // --- Main component ---\n// @vue/component\n\nexport var BFormTags = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_TAGS,\n  mixins: [listenersMixin, idMixin, modelMixin, formControlMixin, formSizeMixin, formStateMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      hasFocus: false,\n      newTag: '',\n      tags: [],\n      // Tags that were removed\n      removedTags: [],\n      // Populated when tags are parsed\n      tagsState: cleanTagsState(),\n      focusState: null\n    };\n  },\n  computed: {\n    computedInputId: function computedInputId() {\n      return this.inputId || this.safeId('__input__');\n    },\n    computedInputType: function computedInputType() {\n      // We only allow certain types\n      return arrayIncludes(TYPES, this.inputType) ? this.inputType : 'text';\n    },\n    computedInputAttrs: function computedInputAttrs() {\n      var disabled = this.disabled,\n        form = this.form;\n      return _objectSpread(_objectSpread({}, this.inputAttrs), {}, {\n        // Must have attributes\n        id: this.computedInputId,\n        value: this.newTag,\n        disabled: disabled,\n        form: form\n      });\n    },\n    computedInputHandlers: function computedInputHandlers() {\n      return _objectSpread(_objectSpread({}, omit(this.bvListeners, [EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT])), {}, {\n        blur: this.onInputBlur,\n        change: this.onInputChange,\n        focus: this.onInputFocus,\n        input: this.onInputInput,\n        keydown: this.onInputKeydown,\n        reset: this.reset\n      });\n    },\n    computedSeparator: function computedSeparator() {\n      // Merge the array into a string\n      return concat(this.separator).filter(isString).filter(identity).join('');\n    },\n    computedSeparatorRegExp: function computedSeparatorRegExp() {\n      // We use a computed prop here to precompile the RegExp\n      // The RegExp is a character class RE in the form of `/[abc]+/`\n      // where a, b, and c are the valid separator characters\n      // -> `tags = str.split(/[abc]+/).filter(t => t)`\n      var separator = this.computedSeparator;\n      return separator ? new RegExp(\"[\".concat(escapeRegExpChars(separator), \"]+\")) : null;\n    },\n    computedJoiner: function computedJoiner() {\n      // When tag(s) are invalid or duplicate, we leave them\n      // in the input so that the user can see them\n      // If there are more than one tag in the input, we use the\n      // first separator character as the separator in the input\n      // We append a space if the first separator is not a space\n      var joiner = this.computedSeparator.charAt(0);\n      return joiner !== ' ' ? \"\".concat(joiner, \" \") : joiner;\n    },\n    computeIgnoreInputFocusSelector: function computeIgnoreInputFocusSelector() {\n      // Normalize to an single selector with selectors separated by `,`\n      return concat(this.ignoreInputFocusSelector).filter(identity).join(',').trim();\n    },\n    disableAddButton: function disableAddButton() {\n      var _this = this;\n\n      // If 'Add' button should be disabled\n      // If the input contains at least one tag that can\n      // be added, then the 'Add' button should be enabled\n      var newTag = trim(this.newTag);\n      return newTag === '' || !this.splitTags(newTag).some(function (t) {\n        return !arrayIncludes(_this.tags, t) && _this.validateTag(t);\n      });\n    },\n    duplicateTags: function duplicateTags() {\n      return this.tagsState.duplicate;\n    },\n    hasDuplicateTags: function hasDuplicateTags() {\n      return this.duplicateTags.length > 0;\n    },\n    invalidTags: function invalidTags() {\n      return this.tagsState.invalid;\n    },\n    hasInvalidTags: function hasInvalidTags() {\n      return this.invalidTags.length > 0;\n    },\n    isLimitReached: function isLimitReached() {\n      var limit = this.limit;\n      return isNumber(limit) && limit >= 0 && this.tags.length >= limit;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    this.tags = cleanTags(newValue);\n  }), _defineProperty(_watch, \"tags\", function tags(newValue, oldValue) {\n    // Update the `v-model` (if it differs from the value prop)\n    if (!looseEqual(newValue, this[MODEL_PROP_NAME])) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n    if (!looseEqual(newValue, oldValue)) {\n      newValue = concat(newValue).filter(identity);\n      oldValue = concat(oldValue).filter(identity);\n      this.removedTags = oldValue.filter(function (old) {\n        return !arrayIncludes(newValue, old);\n      });\n    }\n  }), _defineProperty(_watch, \"tagsState\", function tagsState(newValue, oldValue) {\n    // Emit a tag-state event when the `tagsState` object changes\n    if (!looseEqual(newValue, oldValue)) {\n      this.$emit(EVENT_NAME_TAG_STATE, newValue.valid, newValue.invalid, newValue.duplicate);\n    }\n  }), _watch),\n  created: function created() {\n    // We do this in created to make sure an input event emits\n    // if the cleaned tags are not equal to the value prop\n    this.tags = cleanTags(this[MODEL_PROP_NAME]);\n  },\n  mounted: function mounted() {\n    // Listen for form reset events, to reset the tags input\n    var $form = closest('form', this.$el);\n    if ($form) {\n      eventOn($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var $form = closest('form', this.$el);\n    if ($form) {\n      eventOff($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  methods: {\n    addTag: function addTag(newTag) {\n      newTag = isString(newTag) ? newTag : this.newTag;\n      /* istanbul ignore next */\n\n      if (this.disabled || trim(newTag) === '' || this.isLimitReached) {\n        // Early exit\n        return;\n      }\n      var parsed = this.parseTags(newTag); // Add any new tags to the `tags` array, or if the\n      // array of `allTags` is empty, we clear the input\n\n      if (parsed.valid.length > 0 || parsed.all.length === 0) {\n        // Clear the user input element (and leave in any invalid/duplicate tag(s)\n\n        /* istanbul ignore if: full testing to be added later */\n        if (matches(this.getInput(), 'select')) {\n          // The following is needed to properly\n          // work with `<select>` elements\n          this.newTag = '';\n        } else {\n          var invalidAndDuplicates = [].concat(_toConsumableArray(parsed.invalid), _toConsumableArray(parsed.duplicate));\n          this.newTag = parsed.all.filter(function (tag) {\n            return arrayIncludes(invalidAndDuplicates, tag);\n          }).join(this.computedJoiner).concat(invalidAndDuplicates.length > 0 ? this.computedJoiner.charAt(0) : '');\n        }\n      }\n      if (parsed.valid.length > 0) {\n        // We add the new tags in one atomic operation\n        // to trigger reactivity once (instead of once per tag)\n        // We do this after we update the new tag input value\n        // `concat()` can be faster than array spread, when both args are arrays\n        this.tags = concat(this.tags, parsed.valid);\n      }\n      this.tagsState = parsed; // Attempt to re-focus the input (specifically for when using the Add\n      // button, as the button disappears after successfully adding a tag\n\n      this.focus();\n    },\n    removeTag: function removeTag(tag) {\n      /* istanbul ignore next */\n      if (this.disabled) {\n        return;\n      } // TODO:\n      //   Add `onRemoveTag(tag)` user method, which if returns `false`\n      //   will prevent the tag from being removed (i.e. confirmation)\n      //   Or emit cancelable `BvEvent`\n\n      this.tags = this.tags.filter(function (t) {\n        return t !== tag;\n      });\n    },\n    reset: function reset() {\n      var _this2 = this;\n      this.newTag = '';\n      this.tags = [];\n      this.$nextTick(function () {\n        _this2.removedTags = [];\n        _this2.tagsState = cleanTagsState();\n      });\n    },\n    // --- Input element event handlers ---\n    onInputInput: function onInputInput(event) {\n      /* istanbul ignore next: hard to test composition events */\n      if (this.disabled || isEvent(event) && event.target.composing) {\n        // `event.target.composing` is set by Vue (`v-model` directive)\n        // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js\n        return;\n      }\n      var newTag = processEventValue(event);\n      var separatorRe = this.computedSeparatorRegExp;\n      if (this.newTag !== newTag) {\n        this.newTag = newTag;\n      } // We ignore leading whitespace for the following\n\n      newTag = trimLeft(newTag);\n      if (separatorRe && separatorRe.test(newTag.slice(-1))) {\n        // A trailing separator character was entered, so add the tag(s)\n        // Note: More than one tag on input event is possible via copy/paste\n        this.addTag();\n      } else {\n        // Validate (parse tags) on input event\n        this.tagsState = newTag === '' ? cleanTagsState() : this.parseTags(newTag);\n      }\n    },\n    onInputChange: function onInputChange(event) {\n      // Change is triggered on `<input>` blur, or `<select>` selected\n      // This event is opt-in\n      if (!this.disabled && this.addOnChange) {\n        var newTag = processEventValue(event);\n        /* istanbul ignore next */\n\n        if (this.newTag !== newTag) {\n          this.newTag = newTag;\n        }\n        this.addTag();\n      }\n    },\n    onInputKeydown: function onInputKeydown(event) {\n      // Early exit\n\n      /* istanbul ignore next */\n      if (this.disabled || !isEvent(event)) {\n        return;\n      }\n      var keyCode = event.keyCode;\n      var value = event.target.value || '';\n      /* istanbul ignore else: testing to be added later */\n\n      if (!this.noAddOnEnter && keyCode === CODE_ENTER) {\n        // Attempt to add the tag when user presses enter\n        stopEvent(event, {\n          propagation: false\n        });\n        this.addTag();\n      } else if (this.removeOnDelete && (keyCode === CODE_BACKSPACE || keyCode === CODE_DELETE) && value === '') {\n        // Remove the last tag if the user pressed backspace/delete and the input is empty\n        stopEvent(event, {\n          propagation: false\n        });\n        this.tags = this.tags.slice(0, -1);\n      }\n    },\n    // --- Wrapper event handlers ---\n    onClick: function onClick(event) {\n      var _this3 = this;\n      var ignoreFocusSelector = this.computeIgnoreInputFocusSelector;\n      if (!ignoreFocusSelector || !closest(ignoreFocusSelector, event.target, true)) {\n        this.$nextTick(function () {\n          _this3.focus();\n        });\n      }\n    },\n    onInputFocus: function onInputFocus(event) {\n      var _this4 = this;\n      if (this.focusState !== 'out') {\n        this.focusState = 'in';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (_this4.hasFocus) {\n              _this4.$emit(EVENT_NAME_FOCUS, event);\n              _this4.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onInputBlur: function onInputBlur(event) {\n      var _this5 = this;\n      if (this.focusState !== 'in') {\n        this.focusState = 'out';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (!_this5.hasFocus) {\n              _this5.$emit(EVENT_NAME_BLUR, event);\n              _this5.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onFocusin: function onFocusin(event) {\n      this.hasFocus = true;\n      this.$emit(EVENT_NAME_FOCUSIN, event);\n    },\n    onFocusout: function onFocusout(event) {\n      this.hasFocus = false;\n      this.$emit(EVENT_NAME_FOCUSOUT, event);\n    },\n    handleAutofocus: function handleAutofocus() {\n      var _this6 = this;\n      this.$nextTick(function () {\n        requestAF(function () {\n          if (_this6.autofocus) {\n            _this6.focus();\n          }\n        });\n      });\n    },\n    // --- Public methods ---\n    focus: function focus() {\n      if (!this.disabled) {\n        attemptFocus(this.getInput());\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        attemptBlur(this.getInput());\n      }\n    },\n    // --- Private methods ---\n    splitTags: function splitTags(newTag) {\n      // Split the input into an array of raw tags\n      newTag = toString(newTag);\n      var separatorRe = this.computedSeparatorRegExp; // Split the tag(s) via the optional separator\n      // Normally only a single tag is provided, but copy/paste\n      // can enter multiple tags in a single operation\n\n      return (separatorRe ? newTag.split(separatorRe) : [newTag]).map(trim).filter(identity);\n    },\n    parseTags: function parseTags(newTag) {\n      var _this7 = this;\n\n      // Takes `newTag` value and parses it into `validTags`,\n      // `invalidTags`, and duplicate tags as an object\n      // Split the input into raw tags\n      var tags = this.splitTags(newTag); // Base results\n\n      var parsed = {\n        all: tags,\n        valid: [],\n        invalid: [],\n        duplicate: []\n      }; // Parse the unique tags\n\n      tags.forEach(function (tag) {\n        if (arrayIncludes(_this7.tags, tag) || arrayIncludes(parsed.valid, tag)) {\n          // Unique duplicate tags\n          if (!arrayIncludes(parsed.duplicate, tag)) {\n            parsed.duplicate.push(tag);\n          }\n        } else if (_this7.validateTag(tag)) {\n          // We only add unique/valid tags\n          parsed.valid.push(tag);\n        } else {\n          // Unique invalid tags\n          if (!arrayIncludes(parsed.invalid, tag)) {\n            parsed.invalid.push(tag);\n          }\n        }\n      });\n      return parsed;\n    },\n    validateTag: function validateTag(tag) {\n      var tagValidator = this.tagValidator;\n      return hasPropFunction(tagValidator) ? tagValidator(tag) : true;\n    },\n    getInput: function getInput() {\n      // Returns the input element reference (or null if not found)\n      // We need to escape `computedInputId` since it can be user-provided\n      return select(\"#\".concat(cssEscape(this.computedInputId)), this.$el);\n    },\n    // Default User Interface render\n    defaultRender: function defaultRender(_ref) {\n      var addButtonText = _ref.addButtonText,\n        addButtonVariant = _ref.addButtonVariant,\n        addTag = _ref.addTag,\n        disableAddButton = _ref.disableAddButton,\n        disabled = _ref.disabled,\n        duplicateTagText = _ref.duplicateTagText,\n        inputAttrs = _ref.inputAttrs,\n        inputClass = _ref.inputClass,\n        inputHandlers = _ref.inputHandlers,\n        inputType = _ref.inputType,\n        invalidTagText = _ref.invalidTagText,\n        isDuplicate = _ref.isDuplicate,\n        isInvalid = _ref.isInvalid,\n        isLimitReached = _ref.isLimitReached,\n        limitTagsText = _ref.limitTagsText,\n        noTagRemove = _ref.noTagRemove,\n        placeholder = _ref.placeholder,\n        removeTag = _ref.removeTag,\n        tagClass = _ref.tagClass,\n        tagPills = _ref.tagPills,\n        tagRemoveLabel = _ref.tagRemoveLabel,\n        tagVariant = _ref.tagVariant,\n        tags = _ref.tags;\n      var h = this.$createElement; // Make the list of tags\n\n      var $tags = tags.map(function (tag) {\n        tag = toString(tag);\n        return h(BFormTag, {\n          class: tagClass,\n          // `BFormTag` will auto generate an ID\n          // so we do not need to set the ID prop\n          props: {\n            disabled: disabled,\n            noRemove: noTagRemove,\n            pill: tagPills,\n            removeLabel: tagRemoveLabel,\n            tag: 'li',\n            title: tag,\n            variant: tagVariant\n          },\n          on: {\n            remove: function remove() {\n              return removeTag(tag);\n            }\n          },\n          key: \"tags_\".concat(tag)\n        }, tag);\n      }); // Feedback IDs if needed\n\n      var invalidFeedbackId = invalidTagText && isInvalid ? this.safeId('__invalid_feedback__') : null;\n      var duplicateFeedbackId = duplicateTagText && isDuplicate ? this.safeId('__duplicate_feedback__') : null;\n      var limitFeedbackId = limitTagsText && isLimitReached ? this.safeId('__limit_feedback__') : null; // Compute the `aria-describedby` attribute value\n\n      var ariaDescribedby = [inputAttrs['aria-describedby'], invalidFeedbackId, duplicateFeedbackId, limitFeedbackId].filter(identity).join(' '); // Input\n\n      var $input = h('input', {\n        staticClass: 'b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0',\n        class: inputClass,\n        style: {\n          outline: 0,\n          minWidth: '5rem'\n        },\n        attrs: _objectSpread(_objectSpread({}, inputAttrs), {}, {\n          'aria-describedby': ariaDescribedby || null,\n          type: inputType,\n          placeholder: placeholder || null\n        }),\n        domProps: {\n          value: inputAttrs.value\n        },\n        on: inputHandlers,\n        // Directive needed to get `event.target.composing` set (if needed)\n        directives: [{\n          name: 'model',\n          value: inputAttrs.value\n        }],\n        ref: 'input'\n      }); // Add button\n\n      var $button = h(BButton, {\n        staticClass: 'b-form-tags-button py-0',\n        class: {\n          // Only show the button if the tag can be added\n          // We use the `invisible` class instead of not rendering\n          // the button, so that we maintain layout to prevent\n          // the user input from jumping around\n          invisible: disableAddButton\n        },\n        style: {\n          fontSize: '90%'\n        },\n        props: {\n          disabled: disableAddButton || isLimitReached,\n          variant: addButtonVariant\n        },\n        on: {\n          click: function click() {\n            return addTag();\n          }\n        },\n        ref: 'button'\n      }, [this.normalizeSlot(SLOT_NAME_ADD_BUTTON_TEXT) || addButtonText]); // ID of the tags + input `<ul>` list\n      // Note we could concatenate `inputAttrs.id` with '__tag_list__'\n      // but `inputId` may be `null` until after mount\n      // `safeId()` returns `null`, if no user provided ID,\n      // until after mount when a unique ID is generated\n\n      var tagListId = this.safeId('__tag_list__');\n      var $field = h('li', {\n        staticClass: 'b-form-tags-field flex-grow-1',\n        attrs: {\n          role: 'none',\n          'aria-live': 'off',\n          'aria-controls': tagListId\n        },\n        key: 'tags_field'\n      }, [h('div', {\n        staticClass: 'd-flex',\n        attrs: {\n          role: 'group'\n        }\n      }, [$input, $button])]); // Wrap in an unordered list element (we use a list for accessibility)\n\n      var $ul = h('ul', {\n        staticClass: 'b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center',\n        attrs: {\n          id: tagListId\n        },\n        key: 'tags_list'\n      }, [$tags, $field]); // Assemble the feedback\n\n      var $feedback = h();\n      if (invalidTagText || duplicateTagText || limitTagsText) {\n        // Add an aria live region for the invalid/duplicate tag\n        // messages if the user has not disabled the messages\n        var ariaLive = this.feedbackAriaLive,\n          joiner = this.computedJoiner; // Invalid tag feedback if needed (error)\n\n        var $invalid = h();\n        if (invalidFeedbackId) {\n          $invalid = h(BFormInvalidFeedback, {\n            props: {\n              id: invalidFeedbackId,\n              ariaLive: ariaLive,\n              forceShow: true\n            },\n            key: 'tags_invalid_feedback'\n          }, [this.invalidTagText, ': ', this.invalidTags.join(joiner)]);\n        } // Duplicate tag feedback if needed (warning, not error)\n\n        var $duplicate = h();\n        if (duplicateFeedbackId) {\n          $duplicate = h(BFormText, {\n            props: {\n              id: duplicateFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_duplicate_feedback'\n          }, [this.duplicateTagText, ': ', this.duplicateTags.join(joiner)]);\n        } // Limit tags feedback if needed (warning, not error)\n\n        var $limit = h();\n        if (limitFeedbackId) {\n          $limit = h(BFormText, {\n            props: {\n              id: limitFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_limit_feedback'\n          }, [limitTagsText]);\n        }\n        $feedback = h('div', {\n          attrs: {\n            'aria-live': 'polite',\n            'aria-atomic': 'true'\n          },\n          key: 'tags_feedback'\n        }, [$invalid, $duplicate, $limit]);\n      } // Return the content\n\n      return [$ul, $feedback];\n    }\n  },\n  render: function render(h) {\n    var name = this.name,\n      disabled = this.disabled,\n      required = this.required,\n      form = this.form,\n      tags = this.tags,\n      computedInputId = this.computedInputId,\n      hasFocus = this.hasFocus,\n      noOuterFocus = this.noOuterFocus; // Scoped slot properties\n\n    var scope = _objectSpread({\n      // Array of tags (shallow copy to prevent mutations)\n      tags: tags.slice(),\n      // <input> v-bind:inputAttrs\n      inputAttrs: this.computedInputAttrs,\n      // We don't include this in the attrs, as users may want to override this\n      inputType: this.computedInputType,\n      // <input> v-on:inputHandlers\n      inputHandlers: this.computedInputHandlers,\n      // Methods\n      removeTag: this.removeTag,\n      addTag: this.addTag,\n      reset: this.reset,\n      // <input> :id=\"inputId\"\n      inputId: computedInputId,\n      // Invalid/Duplicate state information\n      isInvalid: this.hasInvalidTags,\n      invalidTags: this.invalidTags.slice(),\n      isDuplicate: this.hasDuplicateTags,\n      duplicateTags: this.duplicateTags.slice(),\n      isLimitReached: this.isLimitReached,\n      // If the 'Add' button should be disabled\n      disableAddButton: this.disableAddButton\n    }, pick(this.$props, ['addButtonText', 'addButtonVariant', 'disabled', 'duplicateTagText', 'form', 'inputClass', 'invalidTagText', 'limit', 'limitTagsText', 'noTagRemove', 'placeholder', 'required', 'separator', 'size', 'state', 'tagClass', 'tagPills', 'tagRemoveLabel', 'tagVariant'])); // Generate the user interface\n\n    var $content = this.normalizeSlot(SLOT_NAME_DEFAULT, scope) || this.defaultRender(scope); // Generate the `aria-live` region for the current value(s)\n\n    var $output = h('output', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__selected_tags__'),\n        role: 'status',\n        for: computedInputId,\n        'aria-live': hasFocus ? 'polite' : 'off',\n        'aria-atomic': 'true',\n        'aria-relevant': 'additions text'\n      }\n    }, this.tags.join(', ')); // Removed tag live region\n\n    var $removed = h('div', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__removed_tags__'),\n        role: 'status',\n        'aria-live': hasFocus ? 'assertive' : 'off',\n        'aria-atomic': 'true'\n      }\n    }, this.removedTags.length > 0 ? \"(\".concat(this.tagRemovedLabel, \") \").concat(this.removedTags.join(', ')) : ''); // Add hidden inputs for form submission\n\n    var $hidden = h();\n    if (name && !disabled) {\n      // We add hidden inputs for each tag if a name is provided\n      // When there are currently no tags, a visually hidden input\n      // with empty value is rendered for proper required handling\n      var hasTags = tags.length > 0;\n      $hidden = (hasTags ? tags : ['']).map(function (tag) {\n        return h('input', {\n          class: {\n            'sr-only': !hasTags\n          },\n          attrs: {\n            type: hasTags ? 'hidden' : 'text',\n            value: tag,\n            required: required,\n            name: name,\n            form: form\n          },\n          key: \"tag_input_\".concat(tag)\n        });\n      });\n    } // Return the rendered output\n\n    return h('div', {\n      staticClass: 'b-form-tags form-control h-auto',\n      class: [{\n        focus: hasFocus && !noOuterFocus && !disabled,\n        disabled: disabled\n      }, this.sizeFormClass, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        role: 'group',\n        tabindex: disabled || noOuterFocus ? null : '-1',\n        'aria-describedby': this.safeId('__selected_tags__')\n      },\n      on: {\n        click: this.onClick,\n        focusin: this.onFocusin,\n        focusout: this.onFocusout\n      }\n    }, [$output, $removed, $content, $hidden]);\n  }\n});","map":{"version":3,"names":["_watch","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","NAME_FORM_TAGS","EVENT_NAME_BLUR","EVENT_NAME_FOCUS","EVENT_NAME_FOCUSIN","EVENT_NAME_FOCUSOUT","EVENT_NAME_TAG_STATE","EVENT_OPTIONS_PASSIVE","CODE_BACKSPACE","CODE_DELETE","CODE_ENTER","PROP_TYPE_ARRAY","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_ARRAY_STRING","PROP_TYPE_BOOLEAN","PROP_TYPE_FUNCTION","PROP_TYPE_NUMBER","PROP_TYPE_OBJECT","PROP_TYPE_STRING","RX_SPACES","SLOT_NAME_DEFAULT","SLOT_NAME_ADD_BUTTON_TEXT","arrayIncludes","concat","cssEscape","attemptBlur","attemptFocus","closest","matches","requestAF","select","eventOn","eventOff","stopEvent","identity","isEvent","isNumber","isString","looseEqual","makeModelMixin","omit","pick","sortKeys","hasPropFunction","makeProp","makePropsConfigurable","escapeRegExp","trim","trimLeft","formControlMixin","props","formControlProps","formSizeMixin","formSizeProps","formStateMixin","formStateProps","idMixin","idProps","listenersMixin","normalizeSlotMixin","BButton","BFormInvalidFeedback","BFormText","BFormTag","_makeModelMixin","type","defaultValue","modelMixin","mixin","modelProps","MODEL_PROP_NAME","prop","MODEL_EVENT_NAME","event","TYPES","DEFAULT_INPUT_FOCUS_SELECTOR","join","escapeRegExpChars","str","replace","cleanTags","tags","map","tag","index","indexOf","processEventValue","cleanTagsState","all","valid","invalid","duplicate","addButtonText","addButtonVariant","addOnChange","duplicateTagText","feedbackAriaLive","ignoreInputFocusSelector","inputAttrs","inputClass","inputId","inputType","invalidTagText","limit","limitTagsText","noAddOnEnter","noOuterFocus","noTagRemove","placeholder","removeOnDelete","separator","tagClass","tagPills","tagRemoveLabel","tagRemovedLabel","tagValidator","tagVariant","BFormTags","extend","mixins","data","hasFocus","newTag","removedTags","tagsState","focusState","computed","computedInputId","safeId","computedInputType","computedInputAttrs","disabled","form","id","computedInputHandlers","bvListeners","blur","onInputBlur","change","onInputChange","focus","onInputFocus","input","onInputInput","keydown","onInputKeydown","reset","computedSeparator","computedSeparatorRegExp","RegExp","computedJoiner","joiner","charAt","computeIgnoreInputFocusSelector","disableAddButton","_this","splitTags","some","t","validateTag","duplicateTags","hasDuplicateTags","invalidTags","hasInvalidTags","isLimitReached","watch","newValue","oldValue","$emit","old","created","mounted","$form","$el","beforeDestroy","methods","addTag","parsed","parseTags","getInput","invalidAndDuplicates","removeTag","_this2","$nextTick","composing","separatorRe","keyCode","propagation","onClick","_this3","ignoreFocusSelector","_this4","_this5","onFocusin","onFocusout","handleAutofocus","_this6","autofocus","split","_this7","defaultRender","_ref","inputHandlers","isDuplicate","isInvalid","h","$createElement","$tags","class","noRemove","pill","removeLabel","title","variant","on","remove","invalidFeedbackId","duplicateFeedbackId","limitFeedbackId","ariaDescribedby","$input","staticClass","style","outline","minWidth","attrs","domProps","directives","ref","$button","invisible","fontSize","click","normalizeSlot","tagListId","$field","role","$ul","$feedback","ariaLive","$invalid","forceShow","$duplicate","$limit","render","required","scope","$props","$content","$output","for","$removed","$hidden","hasTags","sizeFormClass","stateClass","tabindex","focusin","focusout"],"sources":["/Users/alex/dev/juicyorange/project_2/matb-guessing-game_2/node_modules/bootstrap-vue/esm/components/form-tags/form-tags.js"],"sourcesContent":["var _watch;\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Tagged input form control\n// Based loosely on https://adamwathan.me/renderless-components-in-vuejs/\nimport { Vue } from '../../vue';\nimport { NAME_FORM_TAGS } from '../../constants/components';\nimport { EVENT_NAME_BLUR, EVENT_NAME_FOCUS, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_TAG_STATE, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_BACKSPACE, CODE_DELETE, CODE_ENTER } from '../../constants/key-codes';\nimport { PROP_TYPE_ARRAY, PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_ARRAY_STRING, PROP_TYPE_BOOLEAN, PROP_TYPE_FUNCTION, PROP_TYPE_NUMBER, PROP_TYPE_OBJECT, PROP_TYPE_STRING } from '../../constants/props';\nimport { RX_SPACES } from '../../constants/regex';\nimport { SLOT_NAME_DEFAULT, SLOT_NAME_ADD_BUTTON_TEXT } from '../../constants/slots';\nimport { arrayIncludes, concat } from '../../utils/array';\nimport { cssEscape } from '../../utils/css-escape';\nimport { attemptBlur, attemptFocus, closest, matches, requestAF, select } from '../../utils/dom';\nimport { eventOn, eventOff, stopEvent } from '../../utils/events';\nimport { identity } from '../../utils/identity';\nimport { isEvent, isNumber, isString } from '../../utils/inspect';\nimport { looseEqual } from '../../utils/loose-equal';\nimport { makeModelMixin } from '../../utils/model';\nimport { omit, pick, sortKeys } from '../../utils/object';\nimport { hasPropFunction, makeProp, makePropsConfigurable } from '../../utils/props';\nimport { escapeRegExp, toString, trim, trimLeft } from '../../utils/string';\nimport { formControlMixin, props as formControlProps } from '../../mixins/form-control';\nimport { formSizeMixin, props as formSizeProps } from '../../mixins/form-size';\nimport { formStateMixin, props as formStateProps } from '../../mixins/form-state';\nimport { idMixin, props as idProps } from '../../mixins/id';\nimport { listenersMixin } from '../../mixins/listeners';\nimport { normalizeSlotMixin } from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormText } from '../form/form-text';\nimport { BFormTag } from './form-tag'; // --- Constants ---\n\nvar _makeModelMixin = makeModelMixin('value', {\n  type: PROP_TYPE_ARRAY,\n  defaultValue: []\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // Supported input types (for built in input)\n\n\nvar TYPES = ['text', 'email', 'tel', 'url', 'number']; // Default ignore input focus selector\n\nvar DEFAULT_INPUT_FOCUS_SELECTOR = ['.b-form-tag', 'button', 'input', 'select'].join(' '); // --- Helper methods ---\n// Escape special chars in string and replace\n// contiguous spaces with a whitespace match\n\nvar escapeRegExpChars = function escapeRegExpChars(str) {\n  return escapeRegExp(str).replace(RX_SPACES, '\\\\s');\n}; // Remove leading/trailing spaces from array of tags and remove duplicates\n\n\nvar cleanTags = function cleanTags(tags) {\n  return concat(tags).map(function (tag) {\n    return trim(toString(tag));\n  }).filter(function (tag, index, arr) {\n    return tag.length > 0 && arr.indexOf(tag) === index;\n  });\n}; // Processes an input/change event, normalizing string or event argument\n\n\nvar processEventValue = function processEventValue(event) {\n  return isString(event) ? event : isEvent(event) ? event.target.value || '' : '';\n}; // Returns a fresh empty `tagsState` object\n\n\nvar cleanTagsState = function cleanTagsState() {\n  return {\n    all: [],\n    valid: [],\n    invalid: [],\n    duplicate: []\n  };\n}; // --- Props ---\n\n\nvar props = makePropsConfigurable(sortKeys(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, idProps), modelProps), formControlProps), formSizeProps), formStateProps), {}, {\n  addButtonText: makeProp(PROP_TYPE_STRING, 'Add'),\n  addButtonVariant: makeProp(PROP_TYPE_STRING, 'outline-secondary'),\n  // Enable change event triggering tag addition\n  // Handy if using <select> as the input\n  addOnChange: makeProp(PROP_TYPE_BOOLEAN, false),\n  duplicateTagText: makeProp(PROP_TYPE_STRING, 'Duplicate tag(s)'),\n  feedbackAriaLive: makeProp(PROP_TYPE_STRING, 'assertive'),\n  // Disable the input focus behavior when clicking\n  // on element matching the selector (or selectors)\n  ignoreInputFocusSelector: makeProp(PROP_TYPE_ARRAY_STRING, DEFAULT_INPUT_FOCUS_SELECTOR),\n  // Additional attributes to add to the input element\n  inputAttrs: makeProp(PROP_TYPE_OBJECT, {}),\n  inputClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  inputId: makeProp(PROP_TYPE_STRING),\n  inputType: makeProp(PROP_TYPE_STRING, 'text', function (value) {\n    return arrayIncludes(TYPES, value);\n  }),\n  invalidTagText: makeProp(PROP_TYPE_STRING, 'Invalid tag(s)'),\n  limit: makeProp(PROP_TYPE_NUMBER),\n  limitTagsText: makeProp(PROP_TYPE_STRING, 'Tag limit reached'),\n  // Disable ENTER key from triggering tag addition\n  noAddOnEnter: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Disable the focus ring on the root element\n  noOuterFocus: makeProp(PROP_TYPE_BOOLEAN, false),\n  noTagRemove: makeProp(PROP_TYPE_BOOLEAN, false),\n  placeholder: makeProp(PROP_TYPE_STRING, 'Add tag...'),\n  // Enable deleting last tag in list when CODE_BACKSPACE is\n  // pressed and input is empty\n  removeOnDelete: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Character (or characters) that trigger adding tags\n  separator: makeProp(PROP_TYPE_ARRAY_STRING),\n  tagClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tagPills: makeProp(PROP_TYPE_BOOLEAN, false),\n  tagRemoveLabel: makeProp(PROP_TYPE_STRING, 'Remove tag'),\n  tagRemovedLabel: makeProp(PROP_TYPE_STRING, 'Tag removed'),\n  tagValidator: makeProp(PROP_TYPE_FUNCTION),\n  tagVariant: makeProp(PROP_TYPE_STRING, 'secondary')\n})), NAME_FORM_TAGS); // --- Main component ---\n// @vue/component\n\nexport var BFormTags = /*#__PURE__*/Vue.extend({\n  name: NAME_FORM_TAGS,\n  mixins: [listenersMixin, idMixin, modelMixin, formControlMixin, formSizeMixin, formStateMixin, normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      hasFocus: false,\n      newTag: '',\n      tags: [],\n      // Tags that were removed\n      removedTags: [],\n      // Populated when tags are parsed\n      tagsState: cleanTagsState(),\n      focusState: null\n    };\n  },\n  computed: {\n    computedInputId: function computedInputId() {\n      return this.inputId || this.safeId('__input__');\n    },\n    computedInputType: function computedInputType() {\n      // We only allow certain types\n      return arrayIncludes(TYPES, this.inputType) ? this.inputType : 'text';\n    },\n    computedInputAttrs: function computedInputAttrs() {\n      var disabled = this.disabled,\n          form = this.form;\n      return _objectSpread(_objectSpread({}, this.inputAttrs), {}, {\n        // Must have attributes\n        id: this.computedInputId,\n        value: this.newTag,\n        disabled: disabled,\n        form: form\n      });\n    },\n    computedInputHandlers: function computedInputHandlers() {\n      return _objectSpread(_objectSpread({}, omit(this.bvListeners, [EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT])), {}, {\n        blur: this.onInputBlur,\n        change: this.onInputChange,\n        focus: this.onInputFocus,\n        input: this.onInputInput,\n        keydown: this.onInputKeydown,\n        reset: this.reset\n      });\n    },\n    computedSeparator: function computedSeparator() {\n      // Merge the array into a string\n      return concat(this.separator).filter(isString).filter(identity).join('');\n    },\n    computedSeparatorRegExp: function computedSeparatorRegExp() {\n      // We use a computed prop here to precompile the RegExp\n      // The RegExp is a character class RE in the form of `/[abc]+/`\n      // where a, b, and c are the valid separator characters\n      // -> `tags = str.split(/[abc]+/).filter(t => t)`\n      var separator = this.computedSeparator;\n      return separator ? new RegExp(\"[\".concat(escapeRegExpChars(separator), \"]+\")) : null;\n    },\n    computedJoiner: function computedJoiner() {\n      // When tag(s) are invalid or duplicate, we leave them\n      // in the input so that the user can see them\n      // If there are more than one tag in the input, we use the\n      // first separator character as the separator in the input\n      // We append a space if the first separator is not a space\n      var joiner = this.computedSeparator.charAt(0);\n      return joiner !== ' ' ? \"\".concat(joiner, \" \") : joiner;\n    },\n    computeIgnoreInputFocusSelector: function computeIgnoreInputFocusSelector() {\n      // Normalize to an single selector with selectors separated by `,`\n      return concat(this.ignoreInputFocusSelector).filter(identity).join(',').trim();\n    },\n    disableAddButton: function disableAddButton() {\n      var _this = this;\n\n      // If 'Add' button should be disabled\n      // If the input contains at least one tag that can\n      // be added, then the 'Add' button should be enabled\n      var newTag = trim(this.newTag);\n      return newTag === '' || !this.splitTags(newTag).some(function (t) {\n        return !arrayIncludes(_this.tags, t) && _this.validateTag(t);\n      });\n    },\n    duplicateTags: function duplicateTags() {\n      return this.tagsState.duplicate;\n    },\n    hasDuplicateTags: function hasDuplicateTags() {\n      return this.duplicateTags.length > 0;\n    },\n    invalidTags: function invalidTags() {\n      return this.tagsState.invalid;\n    },\n    hasInvalidTags: function hasInvalidTags() {\n      return this.invalidTags.length > 0;\n    },\n    isLimitReached: function isLimitReached() {\n      var limit = this.limit;\n      return isNumber(limit) && limit >= 0 && this.tags.length >= limit;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    this.tags = cleanTags(newValue);\n  }), _defineProperty(_watch, \"tags\", function tags(newValue, oldValue) {\n    // Update the `v-model` (if it differs from the value prop)\n    if (!looseEqual(newValue, this[MODEL_PROP_NAME])) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n\n    if (!looseEqual(newValue, oldValue)) {\n      newValue = concat(newValue).filter(identity);\n      oldValue = concat(oldValue).filter(identity);\n      this.removedTags = oldValue.filter(function (old) {\n        return !arrayIncludes(newValue, old);\n      });\n    }\n  }), _defineProperty(_watch, \"tagsState\", function tagsState(newValue, oldValue) {\n    // Emit a tag-state event when the `tagsState` object changes\n    if (!looseEqual(newValue, oldValue)) {\n      this.$emit(EVENT_NAME_TAG_STATE, newValue.valid, newValue.invalid, newValue.duplicate);\n    }\n  }), _watch),\n  created: function created() {\n    // We do this in created to make sure an input event emits\n    // if the cleaned tags are not equal to the value prop\n    this.tags = cleanTags(this[MODEL_PROP_NAME]);\n  },\n  mounted: function mounted() {\n    // Listen for form reset events, to reset the tags input\n    var $form = closest('form', this.$el);\n\n    if ($form) {\n      eventOn($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    var $form = closest('form', this.$el);\n\n    if ($form) {\n      eventOff($form, 'reset', this.reset, EVENT_OPTIONS_PASSIVE);\n    }\n  },\n  methods: {\n    addTag: function addTag(newTag) {\n      newTag = isString(newTag) ? newTag : this.newTag;\n      /* istanbul ignore next */\n\n      if (this.disabled || trim(newTag) === '' || this.isLimitReached) {\n        // Early exit\n        return;\n      }\n\n      var parsed = this.parseTags(newTag); // Add any new tags to the `tags` array, or if the\n      // array of `allTags` is empty, we clear the input\n\n      if (parsed.valid.length > 0 || parsed.all.length === 0) {\n        // Clear the user input element (and leave in any invalid/duplicate tag(s)\n\n        /* istanbul ignore if: full testing to be added later */\n        if (matches(this.getInput(), 'select')) {\n          // The following is needed to properly\n          // work with `<select>` elements\n          this.newTag = '';\n        } else {\n          var invalidAndDuplicates = [].concat(_toConsumableArray(parsed.invalid), _toConsumableArray(parsed.duplicate));\n          this.newTag = parsed.all.filter(function (tag) {\n            return arrayIncludes(invalidAndDuplicates, tag);\n          }).join(this.computedJoiner).concat(invalidAndDuplicates.length > 0 ? this.computedJoiner.charAt(0) : '');\n        }\n      }\n\n      if (parsed.valid.length > 0) {\n        // We add the new tags in one atomic operation\n        // to trigger reactivity once (instead of once per tag)\n        // We do this after we update the new tag input value\n        // `concat()` can be faster than array spread, when both args are arrays\n        this.tags = concat(this.tags, parsed.valid);\n      }\n\n      this.tagsState = parsed; // Attempt to re-focus the input (specifically for when using the Add\n      // button, as the button disappears after successfully adding a tag\n\n      this.focus();\n    },\n    removeTag: function removeTag(tag) {\n      /* istanbul ignore next */\n      if (this.disabled) {\n        return;\n      } // TODO:\n      //   Add `onRemoveTag(tag)` user method, which if returns `false`\n      //   will prevent the tag from being removed (i.e. confirmation)\n      //   Or emit cancelable `BvEvent`\n\n\n      this.tags = this.tags.filter(function (t) {\n        return t !== tag;\n      });\n    },\n    reset: function reset() {\n      var _this2 = this;\n\n      this.newTag = '';\n      this.tags = [];\n      this.$nextTick(function () {\n        _this2.removedTags = [];\n        _this2.tagsState = cleanTagsState();\n      });\n    },\n    // --- Input element event handlers ---\n    onInputInput: function onInputInput(event) {\n      /* istanbul ignore next: hard to test composition events */\n      if (this.disabled || isEvent(event) && event.target.composing) {\n        // `event.target.composing` is set by Vue (`v-model` directive)\n        // https://github.com/vuejs/vue/blob/dev/src/platforms/web/runtime/directives/model.js\n        return;\n      }\n\n      var newTag = processEventValue(event);\n      var separatorRe = this.computedSeparatorRegExp;\n\n      if (this.newTag !== newTag) {\n        this.newTag = newTag;\n      } // We ignore leading whitespace for the following\n\n\n      newTag = trimLeft(newTag);\n\n      if (separatorRe && separatorRe.test(newTag.slice(-1))) {\n        // A trailing separator character was entered, so add the tag(s)\n        // Note: More than one tag on input event is possible via copy/paste\n        this.addTag();\n      } else {\n        // Validate (parse tags) on input event\n        this.tagsState = newTag === '' ? cleanTagsState() : this.parseTags(newTag);\n      }\n    },\n    onInputChange: function onInputChange(event) {\n      // Change is triggered on `<input>` blur, or `<select>` selected\n      // This event is opt-in\n      if (!this.disabled && this.addOnChange) {\n        var newTag = processEventValue(event);\n        /* istanbul ignore next */\n\n        if (this.newTag !== newTag) {\n          this.newTag = newTag;\n        }\n\n        this.addTag();\n      }\n    },\n    onInputKeydown: function onInputKeydown(event) {\n      // Early exit\n\n      /* istanbul ignore next */\n      if (this.disabled || !isEvent(event)) {\n        return;\n      }\n\n      var keyCode = event.keyCode;\n      var value = event.target.value || '';\n      /* istanbul ignore else: testing to be added later */\n\n      if (!this.noAddOnEnter && keyCode === CODE_ENTER) {\n        // Attempt to add the tag when user presses enter\n        stopEvent(event, {\n          propagation: false\n        });\n        this.addTag();\n      } else if (this.removeOnDelete && (keyCode === CODE_BACKSPACE || keyCode === CODE_DELETE) && value === '') {\n        // Remove the last tag if the user pressed backspace/delete and the input is empty\n        stopEvent(event, {\n          propagation: false\n        });\n        this.tags = this.tags.slice(0, -1);\n      }\n    },\n    // --- Wrapper event handlers ---\n    onClick: function onClick(event) {\n      var _this3 = this;\n\n      var ignoreFocusSelector = this.computeIgnoreInputFocusSelector;\n\n      if (!ignoreFocusSelector || !closest(ignoreFocusSelector, event.target, true)) {\n        this.$nextTick(function () {\n          _this3.focus();\n        });\n      }\n    },\n    onInputFocus: function onInputFocus(event) {\n      var _this4 = this;\n\n      if (this.focusState !== 'out') {\n        this.focusState = 'in';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (_this4.hasFocus) {\n              _this4.$emit(EVENT_NAME_FOCUS, event);\n\n              _this4.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onInputBlur: function onInputBlur(event) {\n      var _this5 = this;\n\n      if (this.focusState !== 'in') {\n        this.focusState = 'out';\n        this.$nextTick(function () {\n          requestAF(function () {\n            if (!_this5.hasFocus) {\n              _this5.$emit(EVENT_NAME_BLUR, event);\n\n              _this5.focusState = null;\n            }\n          });\n        });\n      }\n    },\n    onFocusin: function onFocusin(event) {\n      this.hasFocus = true;\n      this.$emit(EVENT_NAME_FOCUSIN, event);\n    },\n    onFocusout: function onFocusout(event) {\n      this.hasFocus = false;\n      this.$emit(EVENT_NAME_FOCUSOUT, event);\n    },\n    handleAutofocus: function handleAutofocus() {\n      var _this6 = this;\n\n      this.$nextTick(function () {\n        requestAF(function () {\n          if (_this6.autofocus) {\n            _this6.focus();\n          }\n        });\n      });\n    },\n    // --- Public methods ---\n    focus: function focus() {\n      if (!this.disabled) {\n        attemptFocus(this.getInput());\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        attemptBlur(this.getInput());\n      }\n    },\n    // --- Private methods ---\n    splitTags: function splitTags(newTag) {\n      // Split the input into an array of raw tags\n      newTag = toString(newTag);\n      var separatorRe = this.computedSeparatorRegExp; // Split the tag(s) via the optional separator\n      // Normally only a single tag is provided, but copy/paste\n      // can enter multiple tags in a single operation\n\n      return (separatorRe ? newTag.split(separatorRe) : [newTag]).map(trim).filter(identity);\n    },\n    parseTags: function parseTags(newTag) {\n      var _this7 = this;\n\n      // Takes `newTag` value and parses it into `validTags`,\n      // `invalidTags`, and duplicate tags as an object\n      // Split the input into raw tags\n      var tags = this.splitTags(newTag); // Base results\n\n      var parsed = {\n        all: tags,\n        valid: [],\n        invalid: [],\n        duplicate: []\n      }; // Parse the unique tags\n\n      tags.forEach(function (tag) {\n        if (arrayIncludes(_this7.tags, tag) || arrayIncludes(parsed.valid, tag)) {\n          // Unique duplicate tags\n          if (!arrayIncludes(parsed.duplicate, tag)) {\n            parsed.duplicate.push(tag);\n          }\n        } else if (_this7.validateTag(tag)) {\n          // We only add unique/valid tags\n          parsed.valid.push(tag);\n        } else {\n          // Unique invalid tags\n          if (!arrayIncludes(parsed.invalid, tag)) {\n            parsed.invalid.push(tag);\n          }\n        }\n      });\n      return parsed;\n    },\n    validateTag: function validateTag(tag) {\n      var tagValidator = this.tagValidator;\n      return hasPropFunction(tagValidator) ? tagValidator(tag) : true;\n    },\n    getInput: function getInput() {\n      // Returns the input element reference (or null if not found)\n      // We need to escape `computedInputId` since it can be user-provided\n      return select(\"#\".concat(cssEscape(this.computedInputId)), this.$el);\n    },\n    // Default User Interface render\n    defaultRender: function defaultRender(_ref) {\n      var addButtonText = _ref.addButtonText,\n          addButtonVariant = _ref.addButtonVariant,\n          addTag = _ref.addTag,\n          disableAddButton = _ref.disableAddButton,\n          disabled = _ref.disabled,\n          duplicateTagText = _ref.duplicateTagText,\n          inputAttrs = _ref.inputAttrs,\n          inputClass = _ref.inputClass,\n          inputHandlers = _ref.inputHandlers,\n          inputType = _ref.inputType,\n          invalidTagText = _ref.invalidTagText,\n          isDuplicate = _ref.isDuplicate,\n          isInvalid = _ref.isInvalid,\n          isLimitReached = _ref.isLimitReached,\n          limitTagsText = _ref.limitTagsText,\n          noTagRemove = _ref.noTagRemove,\n          placeholder = _ref.placeholder,\n          removeTag = _ref.removeTag,\n          tagClass = _ref.tagClass,\n          tagPills = _ref.tagPills,\n          tagRemoveLabel = _ref.tagRemoveLabel,\n          tagVariant = _ref.tagVariant,\n          tags = _ref.tags;\n      var h = this.$createElement; // Make the list of tags\n\n      var $tags = tags.map(function (tag) {\n        tag = toString(tag);\n        return h(BFormTag, {\n          class: tagClass,\n          // `BFormTag` will auto generate an ID\n          // so we do not need to set the ID prop\n          props: {\n            disabled: disabled,\n            noRemove: noTagRemove,\n            pill: tagPills,\n            removeLabel: tagRemoveLabel,\n            tag: 'li',\n            title: tag,\n            variant: tagVariant\n          },\n          on: {\n            remove: function remove() {\n              return removeTag(tag);\n            }\n          },\n          key: \"tags_\".concat(tag)\n        }, tag);\n      }); // Feedback IDs if needed\n\n      var invalidFeedbackId = invalidTagText && isInvalid ? this.safeId('__invalid_feedback__') : null;\n      var duplicateFeedbackId = duplicateTagText && isDuplicate ? this.safeId('__duplicate_feedback__') : null;\n      var limitFeedbackId = limitTagsText && isLimitReached ? this.safeId('__limit_feedback__') : null; // Compute the `aria-describedby` attribute value\n\n      var ariaDescribedby = [inputAttrs['aria-describedby'], invalidFeedbackId, duplicateFeedbackId, limitFeedbackId].filter(identity).join(' '); // Input\n\n      var $input = h('input', {\n        staticClass: 'b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0',\n        class: inputClass,\n        style: {\n          outline: 0,\n          minWidth: '5rem'\n        },\n        attrs: _objectSpread(_objectSpread({}, inputAttrs), {}, {\n          'aria-describedby': ariaDescribedby || null,\n          type: inputType,\n          placeholder: placeholder || null\n        }),\n        domProps: {\n          value: inputAttrs.value\n        },\n        on: inputHandlers,\n        // Directive needed to get `event.target.composing` set (if needed)\n        directives: [{\n          name: 'model',\n          value: inputAttrs.value\n        }],\n        ref: 'input'\n      }); // Add button\n\n      var $button = h(BButton, {\n        staticClass: 'b-form-tags-button py-0',\n        class: {\n          // Only show the button if the tag can be added\n          // We use the `invisible` class instead of not rendering\n          // the button, so that we maintain layout to prevent\n          // the user input from jumping around\n          invisible: disableAddButton\n        },\n        style: {\n          fontSize: '90%'\n        },\n        props: {\n          disabled: disableAddButton || isLimitReached,\n          variant: addButtonVariant\n        },\n        on: {\n          click: function click() {\n            return addTag();\n          }\n        },\n        ref: 'button'\n      }, [this.normalizeSlot(SLOT_NAME_ADD_BUTTON_TEXT) || addButtonText]); // ID of the tags + input `<ul>` list\n      // Note we could concatenate `inputAttrs.id` with '__tag_list__'\n      // but `inputId` may be `null` until after mount\n      // `safeId()` returns `null`, if no user provided ID,\n      // until after mount when a unique ID is generated\n\n      var tagListId = this.safeId('__tag_list__');\n      var $field = h('li', {\n        staticClass: 'b-form-tags-field flex-grow-1',\n        attrs: {\n          role: 'none',\n          'aria-live': 'off',\n          'aria-controls': tagListId\n        },\n        key: 'tags_field'\n      }, [h('div', {\n        staticClass: 'd-flex',\n        attrs: {\n          role: 'group'\n        }\n      }, [$input, $button])]); // Wrap in an unordered list element (we use a list for accessibility)\n\n      var $ul = h('ul', {\n        staticClass: 'b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center',\n        attrs: {\n          id: tagListId\n        },\n        key: 'tags_list'\n      }, [$tags, $field]); // Assemble the feedback\n\n      var $feedback = h();\n\n      if (invalidTagText || duplicateTagText || limitTagsText) {\n        // Add an aria live region for the invalid/duplicate tag\n        // messages if the user has not disabled the messages\n        var ariaLive = this.feedbackAriaLive,\n            joiner = this.computedJoiner; // Invalid tag feedback if needed (error)\n\n        var $invalid = h();\n\n        if (invalidFeedbackId) {\n          $invalid = h(BFormInvalidFeedback, {\n            props: {\n              id: invalidFeedbackId,\n              ariaLive: ariaLive,\n              forceShow: true\n            },\n            key: 'tags_invalid_feedback'\n          }, [this.invalidTagText, ': ', this.invalidTags.join(joiner)]);\n        } // Duplicate tag feedback if needed (warning, not error)\n\n\n        var $duplicate = h();\n\n        if (duplicateFeedbackId) {\n          $duplicate = h(BFormText, {\n            props: {\n              id: duplicateFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_duplicate_feedback'\n          }, [this.duplicateTagText, ': ', this.duplicateTags.join(joiner)]);\n        } // Limit tags feedback if needed (warning, not error)\n\n\n        var $limit = h();\n\n        if (limitFeedbackId) {\n          $limit = h(BFormText, {\n            props: {\n              id: limitFeedbackId,\n              ariaLive: ariaLive\n            },\n            key: 'tags_limit_feedback'\n          }, [limitTagsText]);\n        }\n\n        $feedback = h('div', {\n          attrs: {\n            'aria-live': 'polite',\n            'aria-atomic': 'true'\n          },\n          key: 'tags_feedback'\n        }, [$invalid, $duplicate, $limit]);\n      } // Return the content\n\n\n      return [$ul, $feedback];\n    }\n  },\n  render: function render(h) {\n    var name = this.name,\n        disabled = this.disabled,\n        required = this.required,\n        form = this.form,\n        tags = this.tags,\n        computedInputId = this.computedInputId,\n        hasFocus = this.hasFocus,\n        noOuterFocus = this.noOuterFocus; // Scoped slot properties\n\n    var scope = _objectSpread({\n      // Array of tags (shallow copy to prevent mutations)\n      tags: tags.slice(),\n      // <input> v-bind:inputAttrs\n      inputAttrs: this.computedInputAttrs,\n      // We don't include this in the attrs, as users may want to override this\n      inputType: this.computedInputType,\n      // <input> v-on:inputHandlers\n      inputHandlers: this.computedInputHandlers,\n      // Methods\n      removeTag: this.removeTag,\n      addTag: this.addTag,\n      reset: this.reset,\n      // <input> :id=\"inputId\"\n      inputId: computedInputId,\n      // Invalid/Duplicate state information\n      isInvalid: this.hasInvalidTags,\n      invalidTags: this.invalidTags.slice(),\n      isDuplicate: this.hasDuplicateTags,\n      duplicateTags: this.duplicateTags.slice(),\n      isLimitReached: this.isLimitReached,\n      // If the 'Add' button should be disabled\n      disableAddButton: this.disableAddButton\n    }, pick(this.$props, ['addButtonText', 'addButtonVariant', 'disabled', 'duplicateTagText', 'form', 'inputClass', 'invalidTagText', 'limit', 'limitTagsText', 'noTagRemove', 'placeholder', 'required', 'separator', 'size', 'state', 'tagClass', 'tagPills', 'tagRemoveLabel', 'tagVariant'])); // Generate the user interface\n\n\n    var $content = this.normalizeSlot(SLOT_NAME_DEFAULT, scope) || this.defaultRender(scope); // Generate the `aria-live` region for the current value(s)\n\n    var $output = h('output', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__selected_tags__'),\n        role: 'status',\n        for: computedInputId,\n        'aria-live': hasFocus ? 'polite' : 'off',\n        'aria-atomic': 'true',\n        'aria-relevant': 'additions text'\n      }\n    }, this.tags.join(', ')); // Removed tag live region\n\n    var $removed = h('div', {\n      staticClass: 'sr-only',\n      attrs: {\n        id: this.safeId('__removed_tags__'),\n        role: 'status',\n        'aria-live': hasFocus ? 'assertive' : 'off',\n        'aria-atomic': 'true'\n      }\n    }, this.removedTags.length > 0 ? \"(\".concat(this.tagRemovedLabel, \") \").concat(this.removedTags.join(', ')) : ''); // Add hidden inputs for form submission\n\n    var $hidden = h();\n\n    if (name && !disabled) {\n      // We add hidden inputs for each tag if a name is provided\n      // When there are currently no tags, a visually hidden input\n      // with empty value is rendered for proper required handling\n      var hasTags = tags.length > 0;\n      $hidden = (hasTags ? tags : ['']).map(function (tag) {\n        return h('input', {\n          class: {\n            'sr-only': !hasTags\n          },\n          attrs: {\n            type: hasTags ? 'hidden' : 'text',\n            value: tag,\n            required: required,\n            name: name,\n            form: form\n          },\n          key: \"tag_input_\".concat(tag)\n        });\n      });\n    } // Return the rendered output\n\n\n    return h('div', {\n      staticClass: 'b-form-tags form-control h-auto',\n      class: [{\n        focus: hasFocus && !noOuterFocus && !disabled,\n        disabled: disabled\n      }, this.sizeFormClass, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        role: 'group',\n        tabindex: disabled || noOuterFocus ? null : '-1',\n        'aria-describedby': this.safeId('__selected_tags__')\n      },\n      on: {\n        click: this.onClick,\n        focusin: this.onFocusin,\n        focusout: this.onFocusout\n      }\n    }, [$output, $removed, $content, $hidden]);\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}