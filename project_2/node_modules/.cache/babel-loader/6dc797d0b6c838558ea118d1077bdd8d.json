{"ast":null,"code":"import { Vue } from '../vue';\nimport { SLOT_NAME_DEFAULT } from '../constants/slots';\nimport { hasNormalizedSlot as _hasNormalizedSlot, normalizeSlot as _normalizeSlot } from '../utils/normalize-slot';\nimport { concat } from '../utils/array'; // @vue/component\n\nexport var normalizeSlotMixin = Vue.extend({\n  methods: {\n    // Returns `true` if the either a `$scopedSlot` or `$slot` exists with the specified name\n    // `name` can be a string name or an array of names\n    hasNormalizedSlot: function hasNormalizedSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scopedSlots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$scopedSlots;\n      var slots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$slots;\n      return _hasNormalizedSlot(name, scopedSlots, slots);\n    },\n    // Returns an array of rendered VNodes if slot found, otherwise `undefined`\n    // `name` can be a string name or an array of names\n    normalizeSlot: function normalizeSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var scopedSlots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$scopedSlots;\n      var slots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.$slots;\n      var vNodes = _normalizeSlot(name, scope, scopedSlots, slots);\n      return vNodes ? concat(vNodes) : vNodes;\n    }\n  }\n});","map":{"version":3,"names":["Vue","SLOT_NAME_DEFAULT","hasNormalizedSlot","_hasNormalizedSlot","normalizeSlot","_normalizeSlot","concat","normalizeSlotMixin","extend","methods","name","arguments","length","undefined","scopedSlots","$scopedSlots","slots","$slots","scope","vNodes"],"sources":["/Users/alex/dev/juicyorange/project_2/matb-guessing-game_2/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"],"sourcesContent":["import { Vue } from '../vue';\nimport { SLOT_NAME_DEFAULT } from '../constants/slots';\nimport { hasNormalizedSlot as _hasNormalizedSlot, normalizeSlot as _normalizeSlot } from '../utils/normalize-slot';\nimport { concat } from '../utils/array'; // @vue/component\n\nexport var normalizeSlotMixin = Vue.extend({\n  methods: {\n    // Returns `true` if the either a `$scopedSlot` or `$slot` exists with the specified name\n    // `name` can be a string name or an array of names\n    hasNormalizedSlot: function hasNormalizedSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scopedSlots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$scopedSlots;\n      var slots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$slots;\n      return _hasNormalizedSlot(name, scopedSlots, slots);\n    },\n    // Returns an array of rendered VNodes if slot found, otherwise `undefined`\n    // `name` can be a string name or an array of names\n    normalizeSlot: function normalizeSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SLOT_NAME_DEFAULT;\n      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var scopedSlots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$scopedSlots;\n      var slots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.$slots;\n\n      var vNodes = _normalizeSlot(name, scope, scopedSlots, slots);\n\n      return vNodes ? concat(vNodes) : vNodes;\n    }\n  }\n});"],"mappings":"AAAA,SAASA,GAAG,QAAQ,QAAQ;AAC5B,SAASC,iBAAiB,QAAQ,oBAAoB;AACtD,SAASC,iBAAiB,IAAIC,kBAAkB,EAAEC,aAAa,IAAIC,cAAc,QAAQ,yBAAyB;AAClH,SAASC,MAAM,QAAQ,gBAAgB,CAAC,CAAC;;AAEzC,OAAO,IAAIC,kBAAkB,GAAGP,GAAG,CAACQ,MAAM,CAAC;EACzCC,OAAO,EAAE;IACP;IACA;IACAP,iBAAiB,EAAE,SAASA,iBAAiB,GAAG;MAC9C,IAAIQ,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGV,iBAAiB;MAChG,IAAIa,WAAW,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACI,YAAY;MACvG,IAAIC,KAAK,GAAGL,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACM,MAAM;MAC3F,OAAOd,kBAAkB,CAACO,IAAI,EAAEI,WAAW,EAAEE,KAAK,CAAC;IACrD,CAAC;IACD;IACA;IACAZ,aAAa,EAAE,SAASA,aAAa,GAAG;MACtC,IAAIM,IAAI,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAGV,iBAAiB;MAChG,IAAIiB,KAAK,GAAGP,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MAClF,IAAIG,WAAW,GAAGH,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACI,YAAY;MACvG,IAAIC,KAAK,GAAGL,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACM,MAAM;MAE3F,IAAIE,MAAM,GAAGd,cAAc,CAACK,IAAI,EAAEQ,KAAK,EAAEJ,WAAW,EAAEE,KAAK,CAAC;MAE5D,OAAOG,MAAM,GAAGb,MAAM,CAACa,MAAM,CAAC,GAAGA,MAAM;IACzC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}