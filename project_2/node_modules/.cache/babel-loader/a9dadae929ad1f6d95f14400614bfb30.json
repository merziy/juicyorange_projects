{"ast":null,"code":"import { Vue } from '../../../vue';\nimport { SLOT_NAME_TOP_ROW } from '../../../constants/slots';\nimport { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr'; // --- Props ---\n\nexport var props = {}; // --- Mixin ---\n// @vue/component\n\nexport var topRowMixin = Vue.extend({\n  methods: {\n    renderTopRow: function renderTopRow() {\n      var fields = this.computedFields,\n        stacked = this.stacked,\n        tbodyTrClass = this.tbodyTrClass,\n        tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement; // Add static Top Row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(SLOT_NAME_TOP_ROW) || stacked === true || stacked === '') {\n        return h();\n      }\n      return h(BTr, {\n        staticClass: 'b-table-top-row',\n        class: [isFunction(tbodyTrClass) ? tbodyTrClass(null, 'row-top') : tbodyTrClass],\n        attrs: isFunction(tbodyTrAttr) ? tbodyTrAttr(null, 'row-top') : tbodyTrAttr,\n        key: 'b-top-row'\n      }, [this.normalizeSlot(SLOT_NAME_TOP_ROW, {\n        columns: fields.length,\n        fields: fields\n      })]);\n    }\n  }\n});","map":{"version":3,"names":["Vue","SLOT_NAME_TOP_ROW","isFunction","BTr","props","topRowMixin","extend","methods","renderTopRow","fields","computedFields","stacked","tbodyTrClass","tbodyTrAttr","h","$createElement","hasNormalizedSlot","staticClass","class","attrs","key","normalizeSlot","columns","length"],"sources":["/Users/alex/dev/juicyorange/project_2/matb-guessing-game_2/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-top-row.js"],"sourcesContent":["import { Vue } from '../../../vue';\nimport { SLOT_NAME_TOP_ROW } from '../../../constants/slots';\nimport { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr'; // --- Props ---\n\nexport var props = {}; // --- Mixin ---\n// @vue/component\n\nexport var topRowMixin = Vue.extend({\n  methods: {\n    renderTopRow: function renderTopRow() {\n      var fields = this.computedFields,\n          stacked = this.stacked,\n          tbodyTrClass = this.tbodyTrClass,\n          tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement; // Add static Top Row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(SLOT_NAME_TOP_ROW) || stacked === true || stacked === '') {\n        return h();\n      }\n\n      return h(BTr, {\n        staticClass: 'b-table-top-row',\n        class: [isFunction(tbodyTrClass) ? tbodyTrClass(null, 'row-top') : tbodyTrClass],\n        attrs: isFunction(tbodyTrAttr) ? tbodyTrAttr(null, 'row-top') : tbodyTrAttr,\n        key: 'b-top-row'\n      }, [this.normalizeSlot(SLOT_NAME_TOP_ROW, {\n        columns: fields.length,\n        fields: fields\n      })]);\n    }\n  }\n});"],"mappings":"AAAA,SAASA,GAAG,QAAQ,cAAc;AAClC,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,GAAG,QAAQ,OAAO,CAAC,CAAC;;AAE7B,OAAO,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,OAAO,IAAIC,WAAW,GAAGL,GAAG,CAACM,MAAM,CAAC;EAClCC,OAAO,EAAE;IACPC,YAAY,EAAE,SAASA,YAAY,GAAG;MACpC,IAAIC,MAAM,GAAG,IAAI,CAACC,cAAc;QAC5BC,OAAO,GAAG,IAAI,CAACA,OAAO;QACtBC,YAAY,GAAG,IAAI,CAACA,YAAY;QAChCC,WAAW,GAAG,IAAI,CAACA,WAAW;MAClC,IAAIC,CAAC,GAAG,IAAI,CAACC,cAAc,CAAC,CAAC;MAC7B;;MAEA,IAAI,CAAC,IAAI,CAACC,iBAAiB,CAACf,iBAAiB,CAAC,IAAIU,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,EAAE,EAAE;QACpF,OAAOG,CAAC,EAAE;MACZ;MAEA,OAAOA,CAAC,CAACX,GAAG,EAAE;QACZc,WAAW,EAAE,iBAAiB;QAC9BC,KAAK,EAAE,CAAChB,UAAU,CAACU,YAAY,CAAC,GAAGA,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,GAAGA,YAAY,CAAC;QAChFO,KAAK,EAAEjB,UAAU,CAACW,WAAW,CAAC,GAAGA,WAAW,CAAC,IAAI,EAAE,SAAS,CAAC,GAAGA,WAAW;QAC3EO,GAAG,EAAE;MACP,CAAC,EAAE,CAAC,IAAI,CAACC,aAAa,CAACpB,iBAAiB,EAAE;QACxCqB,OAAO,EAAEb,MAAM,CAACc,MAAM;QACtBd,MAAM,EAAEA;MACV,CAAC,CAAC,CAAC,CAAC;IACN;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}