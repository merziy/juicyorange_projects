{"ast":null,"code":"import { NAME_MODAL } from '../../constants/components';\nimport { EVENT_NAME_SHOW, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_ENTER, CODE_SPACE } from '../../constants/key-codes';\nimport { getAttr, hasAttr, isDisabled, matches, select, setAttr } from '../../utils/dom';\nimport { getRootActionEventName, eventOn, eventOff } from '../../utils/events';\nimport { isString } from '../../utils/inspect';\nimport { keys } from '../../utils/object'; // Emitted show event for modal\n\nvar ROOT_ACTION_EVENT_NAME_SHOW = getRootActionEventName(NAME_MODAL, EVENT_NAME_SHOW); // Prop name we use to store info on root element\n\nvar PROPERTY = '__bv_modal_directive__';\nvar getTarget = function getTarget(_ref) {\n  var _ref$modifiers = _ref.modifiers,\n    modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers,\n    arg = _ref.arg,\n    value = _ref.value;\n  // Try value, then arg, otherwise pick last modifier\n  return isString(value) ? value : isString(arg) ? arg : keys(modifiers).reverse()[0];\n};\nvar getTriggerElement = function getTriggerElement(el) {\n  // If root element is a dropdown-item or nav-item, we\n  // need to target the inner link or button instead\n  return el && matches(el, '.dropdown-menu > li, li.nav-item') ? select('a, button', el) || el : el;\n};\nvar setRole = function setRole(trigger) {\n  // Ensure accessibility on non button elements\n  if (trigger && trigger.tagName !== 'BUTTON') {\n    // Only set a role if the trigger element doesn't have one\n    if (!hasAttr(trigger, 'role')) {\n      setAttr(trigger, 'role', 'button');\n    } // Add a tabindex is not a button or link, and tabindex is not provided\n\n    if (trigger.tagName !== 'A' && !hasAttr(trigger, 'tabindex')) {\n      setAttr(trigger, 'tabindex', '0');\n    }\n  }\n};\nvar bind = function bind(el, binding, vnode) {\n  var target = getTarget(binding);\n  var trigger = getTriggerElement(el);\n  if (target && trigger) {\n    var handler = function handler(event) {\n      // `currentTarget` is the element with the listener on it\n      var currentTarget = event.currentTarget;\n      if (!isDisabled(currentTarget)) {\n        var type = event.type;\n        var key = event.keyCode; // Open modal only if trigger is not disabled\n\n        if (type === 'click' || type === 'keydown' && (key === CODE_ENTER || key === CODE_SPACE)) {\n          vnode.context.$root.$emit(ROOT_ACTION_EVENT_NAME_SHOW, target, currentTarget);\n        }\n      }\n    };\n    el[PROPERTY] = {\n      handler: handler,\n      target: target,\n      trigger: trigger\n    }; // If element is not a button, we add `role=\"button\"` for accessibility\n\n    setRole(trigger); // Listen for click events\n\n    eventOn(trigger, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    if (trigger.tagName !== 'BUTTON' && getAttr(trigger, 'role') === 'button') {\n      // If trigger isn't a button but has role button,\n      // we also listen for `keydown.space` && `keydown.enter`\n      eventOn(trigger, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    }\n  }\n};\nvar unbind = function unbind(el) {\n  var oldProp = el[PROPERTY] || {};\n  var trigger = oldProp.trigger;\n  var handler = oldProp.handler;\n  if (trigger && handler) {\n    eventOff(trigger, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(trigger, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n  }\n  delete el[PROPERTY];\n};\nvar componentUpdated = function componentUpdated(el, binding, vnode) {\n  var oldProp = el[PROPERTY] || {};\n  var target = getTarget(binding);\n  var trigger = getTriggerElement(el);\n  if (target !== oldProp.target || trigger !== oldProp.trigger) {\n    // We bind and rebind if the target or trigger changes\n    unbind(el, binding, vnode);\n    bind(el, binding, vnode);\n  } // If trigger element is not a button, ensure `role=\"button\"`\n  // is still set for accessibility\n\n  setRole(trigger);\n};\nvar updated = function updated() {};\n/*\n * Export our directive\n */\n\nexport var VBModal = {\n  inserted: componentUpdated,\n  updated: updated,\n  componentUpdated: componentUpdated,\n  unbind: unbind\n};","map":{"version":3,"names":["NAME_MODAL","EVENT_NAME_SHOW","EVENT_OPTIONS_PASSIVE","CODE_ENTER","CODE_SPACE","getAttr","hasAttr","isDisabled","matches","select","setAttr","getRootActionEventName","eventOn","eventOff","isString","keys","ROOT_ACTION_EVENT_NAME_SHOW","PROPERTY","getTarget","_ref","_ref$modifiers","modifiers","arg","value","reverse","getTriggerElement","el","setRole","trigger","tagName","bind","binding","vnode","target","handler","event","currentTarget","type","key","keyCode","context","$root","$emit","unbind","oldProp","componentUpdated","updated","VBModal","inserted"],"sources":["/Users/alex/dev/juicyorange/project_2/matb-guessing-game_2/node_modules/bootstrap-vue/esm/directives/modal/modal.js"],"sourcesContent":["import { NAME_MODAL } from '../../constants/components';\nimport { EVENT_NAME_SHOW, EVENT_OPTIONS_PASSIVE } from '../../constants/events';\nimport { CODE_ENTER, CODE_SPACE } from '../../constants/key-codes';\nimport { getAttr, hasAttr, isDisabled, matches, select, setAttr } from '../../utils/dom';\nimport { getRootActionEventName, eventOn, eventOff } from '../../utils/events';\nimport { isString } from '../../utils/inspect';\nimport { keys } from '../../utils/object'; // Emitted show event for modal\n\nvar ROOT_ACTION_EVENT_NAME_SHOW = getRootActionEventName(NAME_MODAL, EVENT_NAME_SHOW); // Prop name we use to store info on root element\n\nvar PROPERTY = '__bv_modal_directive__';\n\nvar getTarget = function getTarget(_ref) {\n  var _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers,\n      arg = _ref.arg,\n      value = _ref.value;\n  // Try value, then arg, otherwise pick last modifier\n  return isString(value) ? value : isString(arg) ? arg : keys(modifiers).reverse()[0];\n};\n\nvar getTriggerElement = function getTriggerElement(el) {\n  // If root element is a dropdown-item or nav-item, we\n  // need to target the inner link or button instead\n  return el && matches(el, '.dropdown-menu > li, li.nav-item') ? select('a, button', el) || el : el;\n};\n\nvar setRole = function setRole(trigger) {\n  // Ensure accessibility on non button elements\n  if (trigger && trigger.tagName !== 'BUTTON') {\n    // Only set a role if the trigger element doesn't have one\n    if (!hasAttr(trigger, 'role')) {\n      setAttr(trigger, 'role', 'button');\n    } // Add a tabindex is not a button or link, and tabindex is not provided\n\n\n    if (trigger.tagName !== 'A' && !hasAttr(trigger, 'tabindex')) {\n      setAttr(trigger, 'tabindex', '0');\n    }\n  }\n};\n\nvar bind = function bind(el, binding, vnode) {\n  var target = getTarget(binding);\n  var trigger = getTriggerElement(el);\n\n  if (target && trigger) {\n    var handler = function handler(event) {\n      // `currentTarget` is the element with the listener on it\n      var currentTarget = event.currentTarget;\n\n      if (!isDisabled(currentTarget)) {\n        var type = event.type;\n        var key = event.keyCode; // Open modal only if trigger is not disabled\n\n        if (type === 'click' || type === 'keydown' && (key === CODE_ENTER || key === CODE_SPACE)) {\n          vnode.context.$root.$emit(ROOT_ACTION_EVENT_NAME_SHOW, target, currentTarget);\n        }\n      }\n    };\n\n    el[PROPERTY] = {\n      handler: handler,\n      target: target,\n      trigger: trigger\n    }; // If element is not a button, we add `role=\"button\"` for accessibility\n\n    setRole(trigger); // Listen for click events\n\n    eventOn(trigger, 'click', handler, EVENT_OPTIONS_PASSIVE);\n\n    if (trigger.tagName !== 'BUTTON' && getAttr(trigger, 'role') === 'button') {\n      // If trigger isn't a button but has role button,\n      // we also listen for `keydown.space` && `keydown.enter`\n      eventOn(trigger, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    }\n  }\n};\n\nvar unbind = function unbind(el) {\n  var oldProp = el[PROPERTY] || {};\n  var trigger = oldProp.trigger;\n  var handler = oldProp.handler;\n\n  if (trigger && handler) {\n    eventOff(trigger, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(trigger, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'click', handler, EVENT_OPTIONS_PASSIVE);\n    eventOff(el, 'keydown', handler, EVENT_OPTIONS_PASSIVE);\n  }\n\n  delete el[PROPERTY];\n};\n\nvar componentUpdated = function componentUpdated(el, binding, vnode) {\n  var oldProp = el[PROPERTY] || {};\n  var target = getTarget(binding);\n  var trigger = getTriggerElement(el);\n\n  if (target !== oldProp.target || trigger !== oldProp.trigger) {\n    // We bind and rebind if the target or trigger changes\n    unbind(el, binding, vnode);\n    bind(el, binding, vnode);\n  } // If trigger element is not a button, ensure `role=\"button\"`\n  // is still set for accessibility\n\n\n  setRole(trigger);\n};\n\nvar updated = function updated() {};\n/*\n * Export our directive\n */\n\n\nexport var VBModal = {\n  inserted: componentUpdated,\n  updated: updated,\n  componentUpdated: componentUpdated,\n  unbind: unbind\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}